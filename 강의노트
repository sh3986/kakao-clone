- 추천 VSC 익스텐션
    1. prettier 코드 자동 수정 익스텐션
    https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode
    
    First, search "editor format on save" then check the box. and
    search "json" then scroll and find out "edit in settings.json" and check "editor.formatonsave: true"

    setting.json에서 
    "editor.formatOnSave": true 으로 변경

    2. Material theme
    비쥬얼 스튜디오 코드 테마 변경

    3. Material Icon Theme


- Git
    파일에서 만든 변경사항을 추적하는 시스템

    Git 저장소
    1. 로컬 컴퓨터
    2. Git hub (클라우드 시스템) - git이랑 정말 다른 것 

    => 깃은 코드 변경 사항을 기록하는 시스템
    깃허브는 이런 깃 파일을 올리는  인터넷 저장소

    Like Github
    ex) bitbucket

- version control
    1. repository : 소스코드를 저장하는 폴더 (Git이 항상 그걸 보고있음)
    2. commit : 파일 변경 기록
    3. branch : 마스터는 건드리지 않고 새로운 기능이나 실험을 할 때 사용
        처음 디폴트로 생성되는 것 : master
        -> 우리가  master_branch 가 생성
        실험해보고 싶은 코드는 있는데, 마스터 브랜치를 건들지 않고 할 때 사용

 - Git 코딩하는 방법
    깃허브 데스크탑 활용 (콘솔은 초보자에게 추천 X)

- repository 생성
    1. Create New repository -> Git hub에 Publish branch
    2. 파일 변경 - 변경 메시지 저장 - commit master(git에 파일 변경 기록) - push orgin(클라우드로 전송)

- html( Not 프로그래밍 언어 )
    Hyper-text-Markup-langauge

    Mark up(책 읽을 때 중요하다고 밑줄 긋는 것)
    => 각각 무엇인지 알려주는 언어
    브라우저에게 이건 제목, 이건 링크, 이건 문단이라고 알려주는게 html

- CSS (디자인) - cascading style sheet 
    브라우저에게 각각 요소들이 어떻게 생겼는지 알려준다.
    ex: 빨간색이고, 이미지가 커야하고 등등

    =>html , css 둘다 프로그래밍언어가 아니다.

- html

index.html : 웹서버들이 index 파일을 제일 먼저 찾도록 설계되어 있음

<name attribute="value">Content</name>
<human gender="male">Human</human>

<title>This sis ther title of the document</title>
링크 example
<a href="http://google.com" target="blank">Go to goole</a>



<!DOCTYPE html> : 이 태그는 구글크롬으로 하여금 이 문서가 html문서임을 알려준다.
                self-contained 태그 : 혼자 스스로 열고 닫는 태그
                이 자체가 정보가 되는 것                


문서는 head, body로 구성

<head> </head> 유저에게 보이지 않는 태그
브라우저에게 웹사이트에 관한 필요한 정보만 제공

<body></body> : 사람들이 읽는 content

h 태그는 1~6까지 있다.

- meta 태그 : 추가 정보
<meta charset="utf-8" />
브라우저에게 내가 작성한 문서가 어떤 character로 작성되었는지 알려준다.

<meta name="description" content="Welcome to my KaKao clone" />

https://en.wikipedia.org › wiki › Orange_(fruit)
이 페이지 번역하기
The orange is the fruit of the citrus species Citrus × sinensis in ...
웹 검색했을 때 위처럼 나오는 글귀로 사용 meta 내용

홈페이지의 정보를 나타내기 위해 사용
<head>
    <meta charset="utf-8" />
    <meta name="author" content="Hoon" />
    <meta name="description" content="Welcome to my KaKao clone" />
    <title>This is my title</title>
</head>


- semantic 태그 : 의미가 있는 태그
제목, 문단, 내비게이션 등 뭔가 뜻이 있는 태그
<h> 제목
<section>This is an important section</section>
<article>This is an important section</article>
<header>This is an important section</header>

- non-semantic 태그 : 아무 의미가 없는 태그
아무 지칭하는 바가 없는 태그
<div> : 컨데이너 박스 태그 ( 이 안에 내용을 넣는다.)
<span> : 짧은 타이틀인건지, 문단인건지 전혀 알 수 없는 태그
        텍스트를 위한 컨테이너

- html ID, Class
<div>
    <div> 
        
    </div>
</div>

이렇게 div가 많으면 뭐가 뭔지 알기 어렵다
=> 구역을 나눌 필요가 있음
<section>
    <header>
    <h1>Title of a sectiton</h1>
    </header>
</section>

<div>
    <header>Title of the unknown container</header>
</div>

+ css로 각 header 스타일을 지정해야하기 때문에
이름을 짓는 것이 매우 중요

=> 그 방법 : ID, Class
<section>
    <header id="headerNumberOne" class="defaultHeader">
    <h1>Title of a sectiton</h1>
    </header>
</section>

<div>
    <header id="differentHeader" class="defaultHeader">
    Title of the unknown container
    </header>
</div>

각 element마다 ID는 한개만 가질 수 있다.
Class는 여러개 존재 가능

ex) 내 여권번호는 ID이지만, 내 국적 Class는 콜롬비아(많은 사람들이 콜롬비아에서 태어났으니)

=> 우리는 주로 class를 많이 사용
웹사이트 상에 아예 고유한 element는 많이 없다.


